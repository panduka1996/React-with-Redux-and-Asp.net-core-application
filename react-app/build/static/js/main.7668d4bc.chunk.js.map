{"version":3,"sources":["actions/api.js","actions/dCandidate.js","reducers/dCandidate.js","reducers/index.js","actions/store.js","components/useForm.js","components/DCandidateForm.js","components/DCandidates.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","url","fetchAll","axios","get","fetchById","id","create","newRecord","post","update","updateRecord","put","delete","ACTION_TYPES","formatData","data","console","log","age","parseInt","InitialState","list","reducers","combineReducers","dCandidate","state","action","type","payload","map","x","filter","store","createStore","compose","applyMiddleware","thunk","useForm","initialFieldValue","validate","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","event","target","name","value","fieldValues","resetForm","initialFieldValues","fullName","mobile","email","bloodGroup","address","connect","dCandidateList","dispatch","createDCandidate","success","onSuccess","api","then","response","catch","err","updateDCandidate","succes","actions","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","classes","props","temp","test","Object","every","useEffect","currentId","find","autoComplete","noValidate","className","onSubmit","preventDefault","window","alert","Grid","container","item","xs","TextField","variant","label","onChange","error","helperText","FormControl","InputLabel","Select","MenuItem","FormHelperText","Button","color","onClick","fetchAllCandidates","fontSize","Paper","padding","elevation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","record","index","key","hover","ButtonGroup","confirm","App","Container","maxWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7668d4bc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = \"http://localhost:13708/api/\"\r\n\r\nexport default {\r\n\r\n    dCandidate(url = baseURL + 'DCandidate/'){ \r\n\r\n        return {\r\n            fetchAll : () => axios.get(url),\r\n            fetchById : (id) => axios.get(url + id),\r\n            create : (newRecord) => axios.post(url,newRecord),\r\n            update : (id,updateRecord) => axios.put(url + id,updateRecord),\r\n            delete : (id) => axios.delete(url + id)\r\n        }\r\n    }\r\n}","import api from './api'\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE : 'CREATE',\r\n    UPDATE : 'UPDATE',\r\n    DELETE : 'DELETE',\r\n    FETCH_ALL : 'FETCH_ALL'\r\n}\r\n\r\nconst formatData = (data) => {\r\n\r\n    console.log(data.age + \"age is \");\r\n    \r\n    return ({\r\n        ...data,\r\n        age : parseInt(data.age? data.age : 0)\r\n    })\r\n}\r\n\r\n\r\nexport const fetchAll = () => \r\n{\r\n    return (dispatch) => {\r\n\r\n        api.dCandidate().fetchAll()\r\n        .then(\r\n            response => {\r\n\r\n                dispatch({\r\n                    type : ACTION_TYPES.FETCH_ALL,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        )\r\n        .catch(err => {\r\n            console.log(err);\r\n            \r\n        })\r\n    }\r\n        \r\n}\r\n\r\nexport const create = (data,onSuccess) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        data = formatData(data)\r\n        api.dCandidate().create(data)\r\n        .then(response => {\r\n\r\n            console.log(response.data);\r\n            \r\n            dispatch({\r\n                type:ACTION_TYPES.CREATE,\r\n                payload: response.data\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const update = (id,data,onSuccess) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        data = formatData(data)\r\n        api.dCandidate().update(id,data)\r\n        .then(response => {\r\n            dispatch({\r\n                type:ACTION_TYPES.UPDATE,\r\n                payload: {id,...data}\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const Delete = (id,onSuccess) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        api.dCandidate().delete(id)\r\n        .then(response => {\r\n            dispatch({\r\n                type:ACTION_TYPES.DELETE,\r\n                payload: id\r\n            })\r\n            onSuccess()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            \r\n        })\r\n    }\r\n}","import { ACTION_TYPES } from '../actions/dCandidate'\r\n\r\nconst InitialState = {\r\n    list : []\r\n}\r\n\r\nexport const dCandidate = (state=InitialState,action) => { \r\n\r\n\r\n    switch(action.type){\r\n\r\n        case ACTION_TYPES.FETCH_ALL :\r\n            return{\r\n                ...state,\r\n                list : [...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE :\r\n            return{\r\n                ...state,\r\n                list : [...state.list,action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE :\r\n            return{\r\n                ...state,\r\n                list : state.list.map(x => x.id == action.payload.id ? action.payload : x )\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE :\r\n            return{\r\n                ...state,\r\n                list : state.list.filter(x => x.id != action.payload.id)\r\n            }\r\n\r\n        default :\r\n            return state\r\n\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { dCandidate } from './dCandidate'\r\n\r\nexport const reducers = combineReducers({\r\n    dCandidate : dCandidate\r\n})","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reducers } from '../reducers/index'\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React,{ useState,useEffect } from 'react'\r\n\r\nconst useForm = (initialFieldValue,validate,setCurrentId) => {\r\n\r\n    const [values,setValues] = useState(initialFieldValue)\r\n    const [errors,setErrors] = useState({})\r\n\r\n    const handleInputChange = (event) => {\r\n\r\n        const {name,value} = event.target\r\n        const fieldValues = {[name]:value}\r\n\r\n        setValues({\r\n             ...values,\r\n             ...fieldValues\r\n        })\r\n\r\n        validate(fieldValues)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValue\r\n        })\r\n\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return{\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n}\r\n\r\nexport default useForm","import React,{ useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText} from '@material-ui/core'\r\nimport useForm from './useForm'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/dCandidate'\r\n\r\nconst styles = theme => {\r\n\r\n    return (\r\n        {\r\n            root : {\r\n\r\n             \"& .MuiTextField-root\" : {\r\n                 margin : theme.spacing(1),\r\n                 minWidth:230\r\n             }\r\n\r\n            },\r\n            formControl:{\r\n                margin : theme.spacing(1),\r\n                minWidth:230\r\n            },\r\n\r\n            smMargin:{\r\n                margin : theme.spacing(1),\r\n            }\r\n        }\r\n    )\r\n\r\n}\r\n\r\nconst initialFieldValues = {\r\n\r\n    fullName : \"\",\r\n    mobile : \"\",\r\n    email : \"\",\r\n    age : \"\",\r\n    bloodGroup : \"\",\r\n    address : \"\"\r\n}\r\n\r\n\r\nconst DCandidateForm = ({classes,...props}) => {\r\n\r\n\r\n    const validate = (fieldValues = values) => {\r\n\r\n        let temp = {...errors}\r\n\r\n        if('fullName' in fieldValues)\r\n        temp.fullName = fieldValues.fullName ? \"\" : \"This field is required\"\r\n        if('mobile' in fieldValues)\r\n        temp.mobile = fieldValues.mobile ? \"\" : \"This field is required\"\r\n        if('bloodGroup' in fieldValues)\r\n        temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required\"\r\n        if('email' in fieldValues)\r\n        temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues == values)\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n        \r\n    } = useForm(initialFieldValues,validate,props.setCurrentId)\r\n    \r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n        \r\n        if(validate()){\r\n\r\n            if(props.currentId == 0){\r\n\r\n                props.createDCandidate(values,() => {\r\n                    return window.alert(\"inserted.\")\r\n                })\r\n\r\n            }\r\n            else{\r\n                props.updateDCandidate(props.currentId,values,() => {\r\n                    return window.alert(\"updated.\")\r\n                })\r\n            }\r\n\r\n          \r\n        }\r\n\r\n        resetForm()\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.currentId != 0){\r\n            setValues({\r\n                ...props.dCandidateList.find(x => x.id == props.currentId )\r\n            })\r\n            setErrors({})\r\n        }\r\n\r\n    },[props.currentId])\r\n\r\n\r\n    return(\r\n      \r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n\r\n                    <TextField \r\n                    name=\"fullName\"\r\n                    variant=\"outlined\"\r\n                    label=\"Full Name\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.fullName && {error:true,helperText:errors.fullName})}\r\n                    />\r\n\r\n                    <TextField \r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    label=\"Email\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.email && {error:true,helperText:errors.email})}\r\n                    />\r\n\r\n                    <FormControl variant=\"outlined\" \r\n                        className={classes.formControl} \r\n                        {...(errors.bloodGroup && {error:true})}>\r\n                         <InputLabel>Blood Group</InputLabel>\r\n                         <Select\r\n                          name=\"bloodGroup\"\r\n                          value={values.bloodGroup}\r\n                          onChange={handleInputChange}\r\n                         >\r\n                             <MenuItem value=\"\">select blood group</MenuItem>\r\n                             <MenuItem value=\"A+\">A+ ve</MenuItem>\r\n                             <MenuItem value=\"A-\">A- ve</MenuItem>\r\n                             <MenuItem value=\"B+\">B+ ve</MenuItem>\r\n                             <MenuItem value=\"B-\">B- ve</MenuItem>\r\n                             <MenuItem value=\"AB+\">AB+ ve</MenuItem>\r\n                             <MenuItem value=\"AB-\">AB- ve</MenuItem>\r\n                             <MenuItem value=\"o+\">o+ ve</MenuItem>\r\n                             <MenuItem value=\"o-\">o- ve</MenuItem>\r\n                         </Select>\r\n                           {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\r\n                    </FormControl>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                   <TextField \r\n                    name=\"mobile\"\r\n                    variant=\"outlined\"\r\n                    label=\"Mobile\"\r\n                    value={values.mobile}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.mobile && {error:true,helperText:errors.mobile})}\r\n                    />\r\n\r\n                   <TextField \r\n                    name=\"age\"\r\n                    variant=\"outlined\"\r\n                    label=\"Age\"\r\n                    value={values.age}\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                    <TextField \r\n                    name=\"address\"\r\n                    variant=\"outlined\"\r\n                    label=\"Address\"\r\n                    value={values.address}\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.smMargin}\r\n                        >\r\n                           Submit\r\n                        </Button>\r\n\r\n                        <Button\r\n                        variant=\"contained\" \r\n                        color=\"default\"\r\n                        className={classes.smMargin}\r\n                        onClick={resetForm}\r\n                        >\r\n                           Reset\r\n                        </Button>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        dCandidateList : state.dCandidate.list\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return{\r\n\r\n    createDCandidate : (value,success) => dispatch(actions.create(value,success)),\r\n    updateDCandidate : (id,value,succes) => dispatch(actions.update(id,value,succes)),\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(DCandidateForm))","import React, { useEffect,useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/dCandidate'\r\nimport { Grid,Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport DCandidateForm from './DCandidateForm'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst styles = theme => {\r\n\r\n    return (\r\n        {\r\n            root : {\r\n             \"& .MuiTableCell-head\" : {\r\n                 fontSize:\"1.25rem\"\r\n             }\r\n            },\r\n\r\n            Paper : {\r\n               margin: theme.spacing(2),\r\n               padding: theme.spacing(2)\r\n            }\r\n\r\n        }\r\n    )\r\n\r\n}\r\n\r\nconst DCandidates = ({classes,...props}) => {\r\n\r\n    const [currentId,setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n    props.fetchAllCandidates()\r\n\r\n   },[])\r\n\r\n   const onDelete = (id) => {\r\n\r\n    if(window.confirm('Are you sure?'))\r\n        props.delete(id,() => {\r\n            return window.alert(\"deleted.\")\r\n        })\r\n   }\r\n\r\n    return(\r\n        <Paper className={classes.Paper} elevation={3}>\r\n            <Grid container>\r\n                    <Grid item xs={6}>\r\n                    <DCandidateForm {...({currentId,setCurrentId})}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead className={classes.root}>\r\n                                    <TableRow>\r\n                                        <TableCell>Name</TableCell>\r\n                                        <TableCell>Mobile</TableCell>\r\n                                        <TableCell>Blood Group</TableCell>\r\n                                        <TableCell></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        props.dCandidateList.map((record,index) => {\r\n                                            return (\r\n                                                <TableRow key={index} hover>\r\n                                                    <TableCell>{record.fullName}</TableCell>\r\n                                                    <TableCell>{record.mobile}</TableCell>\r\n                                                    <TableCell>{record.bloodGroup}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <ButtonGroup variant=\"text\">\r\n                                                           <Button onClick={() => setCurrentId(record.id)}><EditIcon color=\"primary\"/></Button>\r\n                                                           <Button onClick={() => onDelete(record.id)}><DeleteIcon color=\"secondary\" /></Button>\r\n                                                        </ButtonGroup>\r\n                                                    </TableCell>\r\n                                                </TableRow> \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n            </Grid>\r\n       </Paper>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        dCandidateList : state.dCandidate.list\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return{\r\n\r\n    fetchAllCandidates: () => dispatch(actions.fetchAll()),\r\n    delete: (id,success) => dispatch(actions.Delete(id,success))\r\n    }\r\n    \r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(DCandidates))","import React from 'react';\nimport './App.css';\nimport { store } from './actions/store'\nimport { Provider } from 'react-redux'\nimport DCandidates from './components/DCandidates'\nimport { Container } from '@material-ui/core'\n\nfunction App() {\n  return (\n  <Provider store={store}>\n    <Container maxWidth=\"lg\">\n      <DCandidates />\n    </Container>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}